#!/bin/bash
set -o nounset -o pipefail -o errexit -o privileged
function usage {
cat <<USAGE
 USAGE: CAdir <directory>

  Perform CA operations (given on STDIN) on the directory.
USAGE
}

declare -A CAdir=( [root]="" [output]=stdout )
while [[ "${1:-}" != "" ]]
do
  case "${1:-}" in
    -h|'-?'|--help) usage ; exit 0 ;;
    --syslog)       CAdir[output]=syslog ;;
    --stdout)       CAdir[output]=stdout ;;
    --quiet)        CAdir[output]=quiet ;;
    *)              CAdir[root]="$1" ;;
  esac
  shift
done

d=CAdir


## Logging niceties.

function timestamp  {           date --utc +%FT%TZ                           ;}
function stripstamp {           sed -r 's/^.{19}Z -CAdir- //'                ;}
function msg        {           printf "%s\n" "$(timestamp) -CAdir- $1" 1>&2 ;}
function info       {           msg "$1"                                     ;}
function err        {           msg "$1" ; exit 1                            ;}
function locktee    {           flock -w 0.5 -x ./$d/log tee -a ./$d/log     ;}
function syslog     {           logger -i -t CAdir -p user.info              ;}


declare -a CAdirOP
declare -a CAdirERR
function setup_request {
  local -a argv
  read -r -d: -n20 -a argv || true # Short, unterminated input; not a problem.
  if [[ -z "${argv+unset}" ]]
  then
    CAdirERR='Malformed request.'
  else
    set -- "${argv[@]}"
    case "${1:-}" in
      crl|cert)     shift ;;
      sign)         shift
                    case "${1:-}" in
                      CA)       shift ;;
                      '')       : ;;
                    esac ;;
      *)            CAdirERR='Invalid request type.' ;;
    esac
  fi
  if [[ -z "${CAdirERR:+unset}" ]]
  then
    if [[ "$#" = 0 ]]
    then
      CAdirOP="${argv[@]}" # All arguments consumed; request is valid.
    else
      CAdirERR='Invalid arg for request.' # Bad request.
    fi
  fi
}

function perform_request {
  case "${CAdirOP[0]}" in
    sign) ;;
    signCA) ;;
    crl);;
    cert) ;;
  esac
}


function main {
  info "Request received; user is \`$(whoami)'."
  [[ -n "${CAdir[root]}" ]] || err "No CA dir given."
  if cd "${CAdir[root]}" 1>/dev/null 2>&1
  then
    info "Changed directory to \`${CAdir[root]}'."
  else
    err "Failed to change directory to \`${CAdir[root]}'."
  fi
  [[ -d ./$d ]] || { info "Creating \`./$d'." ; mkdir -p ./$d ;}
  setup_request
  [[ -z "${CAdirERR:-}" ]] || err "$CAdirERR"
  info "Locking \`./$d/log'."
  { info "((( Request \`${CAdirOP[0]}' for user \`$(whoami)'."
    info "$(echo command: "${CAdirOP[@]}")"
    info "))) Finished."                                 ;} 2>&1 | locktee
  info "Unlocked."
}


main 2>&1 | stripstamp | case ${CAdir[output]} in
                           stdout)      cat ;;
                           syslog)      syslog ;;
                           quiet)       cat >/dev/null ;;
                         esac

